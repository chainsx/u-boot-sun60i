[cert_type]
cert_type_toc0=1
cert_type_toc1=1

[key_para]
key_toc0=ecc_prime256v1
key_toc1=ecc_prime256v1

;if use rsa key, should be rsa2048 | ... | rsa${width}
;key=rsa2048
;if use ecc key, should be ecc_prime256v1 | ... | ecc_${curve_name}
;key=ecc_prime256v1 | ecc_secp256k1 |ecc_secp384r1 | ecc_secp521r1

;生成所有key（遍历[key],按照Key_Name只生成一次）：
;公钥：xxx.pem.pub
;私钥：xxx.pem
;生成rootkey.crtpt时遍历[key],计算公钥hash

[key_toc0]
sboot=RootKey_Level_0
rootkey=RootKey_Level_0

[key_toc1]
;Item_TOC_name=Key_Name
monitor=TrustedFirmwareContentCertPK
optee=TrustedFirmwareContentCertPK
u-boot=NonTrustedFirmwareContentCertPK
boot=NonTrustedFirmwareContentCertPK
scp=NonTrustedFirmwareContentCertPK

;防回滚版本号
[rollback_ver]
ver=0

;item=Item_TOC_name,    Item_filename,  Cert_Name
[toc0]
item=sboot,		sboot.bin,	sboot.crtpt

;item=Item_TOC_name,    Item_filename,  Cert_Name
[toc1]
rootkey=rootkey,	NULL,		rootkey.crtpt
item=monitor,		monitor.fex,	monitor.crtpt
item=optee,		optee.fex,	optee.crtpt
item=u-boot,		u-boot.fex,	u-boot.crtpt
onlykey=boot,		boot.fex,	boot.crtpt
item=scp,		scp.fex,	scp.crtpt
